Time complexity :O(2^n)
Space complexity : O(2^n + n^2)

class Solution {
    public List<Integer> computePar(String exp) {
        List<Integer> res = new ArrayList<>();        
        for(int i=0;i<exp.length();i++) {
            char ch = exp.charAt(i);
            if(ch == '+' || ch == '-' || ch == '*') {
                List<Integer> left = computePar(exp.substring(0,i));
                List<Integer> right = computePar(exp.substring(i+1));

                for(int l : left) {
                    for(int r : right) {
                        if(ch == '+') res.add(l+r);
                        if(ch == '-') res.add(l-r);
                        if(ch == '*') res.add(l*r);
                    }
                }
            }
            
        }
        if(res.isEmpty()) {
                res.add(Integer.parseInt(exp));
        }    
        return res;
    }
    public List<Integer> diffWaysToCompute(String exp) {
        return computePar(exp);
    }
}
